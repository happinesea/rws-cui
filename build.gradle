import java.text.SimpleDateFormat

buildscript {
    ext {
	springBootVersion = '2.0.1.RELEASE'
	spockVersion = '1.1-groovy-2.4'
	groovyVersion = '2.4.12'
    }
    
    repositories { 
	maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
	classpath "gradle.plugin.com.palantir:jacoco-coverage:0.4.0"
	classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2"
	classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }

}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'project-report'
apply plugin: 'org.springframework.boot'
apply plugin: "com.palantir.jacoco-coverage"
apply plugin: "com.github.kt3k.coveralls"

def jdkVersion = 1.9
sourceCompatibility = jdkVersion
targetCompatibility = jdkVersion

def d    = new Date()
def time = new SimpleDateFormat( "HH:mm '(GMT'Z')'" ).format( d )
def date = new SimpleDateFormat( 'MMMM dd, yyyy' ).format( d )


// application info
version = 1
group = 'com.happinesea'
archivesBaseName = 'rws-lib-tutorial'
description = ''


repositories { mavenCentral() }

dependencies {
    compile 'com.happinesea:rws-lib:0.0.4'

    compile "org.codehaus.groovy:groovy-all:${groovyVersion}"
    compile "org.codehaus.groovy:groovy-templates:${groovyVersion}"
    compile 'org.apache.commons:commons-email:1.4'
    compile 'org.apache.httpcomponents:httpclient:4.5.5'
    compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
    compile 'org.springframework:spring-context:5.0.4.RELEASE'
    compile 'org.slf4j:slf4j-log4j12:1.7.21'
    
    compile localGroovy()
}
eclipse.classpath.file {
    whenMerged { classpath ->
	classpath.entries.findAll { entry -> entry.kind == 'output' }*.path = 'build/bin'
    }
}
eclipseJdt  {
    doLast{
	File f = file('.settings/org.eclipse.core.resources.prefs')
	f.write('eclipse.preferences.version=1\n')
	f.append('encoding/<project>=utf-8')
    }
}

eclipse { project { name = archivesBaseName } }

sourceSets {
    main {
	groovy { srcDirs = ['src/main/groovy']}
    }
}


jar {
    manifest {
	attributes 'Implementation-Title': 'RWS(RMS WEB SERVICE) Facade','Implementation-Version': version,'Built-By': 'http://lab.happinesea.com/rws-lib.html','Build-Jdk': jdkVersion
    }
}

mainClassName = 'com.happinesea.TutorialChangeItemNameBatch'

run {
    systemProperties = System.properties
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.5.1'
}

task launch(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    doFirst {
	if (!project.hasProperty("main")) {
	    throw new IllegalArgumentException("""
                | usage:
                |         ./gradlew $name -Pmain=<ClassName>
                """.stripMargin())
	}

	systemProperties = System.properties as Map

	main = project.main
    }
}
